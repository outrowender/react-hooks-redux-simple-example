{"version":3,"sources":["redux/ActionTypes.js","components/List.js","redux/Actions.js","components/Show.js","redux/Reducer.js","redux/Store.js","App.js","reportWebVitals.js","index.js"],"names":["ActionTypes","changeCharacter","changeAll","List","personagens","useSelector","state","characters","dispatch","useDispatch","selectItem","item","type","name","map","onClick","Show","character","Reducer","INITIAL_STATE","action","data","Store","createStore","App","className","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAAqBA,E,kCAAAA,EACZC,gBAAkB,mBADND,EAEZE,UAAY,wB,WCqBNC,MApBf,WACE,IAAMC,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMC,cAE3CC,EAAWC,cAEXC,EAAa,SAACC,GAClBH,ECNK,CAAEI,KAAMZ,EAAYC,gBAAiBY,KDMXF,KAGjC,OACE,8BACGP,EAAYU,KAAI,SAACD,GAAD,OACf,wBAAmBE,QAAS,kBAAML,EAAWG,IAA7C,SACGA,GADUA,SENNG,MAPf,WACE,IAAMC,EAAYZ,aAAY,SAACC,GAAD,OAAWA,EAAMW,aAE/C,OAAIA,EAAkB,wDAA2BA,KACrC,wD,cCQCC,MAXf,WAAiD,IAAhCZ,EAA+B,uDAAvBa,EAAeC,EAAQ,uCAC9C,OAAQA,EAAOR,MACb,KAAKZ,EAAYE,UACf,OAAO,2BAAKI,GAAZ,IAAmBC,WAAYa,EAAOC,OACxC,KAAKrB,EAAYC,gBACf,OAAO,2BAAKK,GAAZ,IAAmBW,UAAWG,EAAOP,OACvC,QACE,OAAOP,ICPPa,EAAgB,CACpBZ,WAAY,CAAC,OAAQ,OAAQ,UAAW,SACxCU,UAAW,MAGPK,EAAQC,YAAYL,GCWXM,MAbf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,eAAC,IAAD,CAAUC,MAAOJ,EAAjB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,YCAKK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d9454aae.chunk.js","sourcesContent":["export default class ActionTypes {\n  static changeCharacter = \"CHANGE_CHARACTER\";\n  static changeAll = \"CHANGE_ALL_CHARACTERS\";\n}\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { ChangeCharacterAction } from \"../redux/Actions\";\n\nfunction List() {\n  const personagens = useSelector((state) => state.characters);\n\n  const dispatch = useDispatch();\n\n  const selectItem = (item) => {\n    dispatch(ChangeCharacterAction(item));\n  };\n\n  return (\n    <div>\n      {personagens.map((name) => (\n        <button key={name} onClick={() => selectItem(name)}>\n          {name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default List;\n","import ActionTypes from \"./ActionTypes\";\n\nexport function ChangeCharacterAction(name) {\n  return { type: ActionTypes.changeCharacter, name };\n}\n","import { useSelector } from \"react-redux\";\n\nfunction Show() {\n  const character = useSelector((state) => state.character);\n\n  if (character) return <h3>Selected character is {character}</h3>;\n  else return <h3>No character seleted!</h3>;\n}\n\nexport default Show;\n","import ActionTypes from \"./ActionTypes\";\nimport { INITIAL_STATE } from \"./Store\";\n\nfunction Reducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case ActionTypes.changeAll:\n      return { ...state, characters: action.data };\n    case ActionTypes.changeCharacter:\n      return { ...state, character: action.name };\n    default:\n      return state;\n  }\n}\n\nexport default Reducer;\n","import { createStore } from \"redux\";\nimport Reducer from \"./Reducer\";\n\nconst INITIAL_STATE = {\n  characters: [\"Sage\", \"Sova\", \"Phoenix\", \"Reyna\"],\n  character: null,\n};\n\nconst Store = createStore(Reducer);\n\nexport { Store, INITIAL_STATE };\n","import { Provider } from \"react-redux\";\nimport \"./App.css\";\nimport List from \"./components/List\";\nimport Show from \"./components/Show\";\nimport { Store } from \"./redux/Store\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Provider store={Store}>\n          <Show></Show>\n          <List></List>\n        </Provider>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}